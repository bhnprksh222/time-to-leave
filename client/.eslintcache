[{"/media/bsociety/Media/WD/time-to-leave/client/src/index.js":"1","/media/bsociety/Media/WD/time-to-leave/client/src/components/App.js":"2","/media/bsociety/Media/WD/time-to-leave/client/src/components/MyForm.js":"3","/media/bsociety/Media/WD/time-to-leave/client/src/components/Log.js":"4","/media/bsociety/Media/WD/time-to-leave/client/src/components/FormComp.js":"5","/media/bsociety/Media/WD/time-to-leave/client/src/components/Firebase.js":"6"},{"size":164,"mtime":1608412455542,"results":"7","hashOfConfig":"8"},{"size":1239,"mtime":1608483356041,"results":"9","hashOfConfig":"8"},{"size":1372,"mtime":1608472394727,"results":"10","hashOfConfig":"8"},{"size":1577,"mtime":1608482331217,"results":"11","hashOfConfig":"8"},{"size":8663,"mtime":1608486829865,"results":"12","hashOfConfig":"8"},{"size":525,"mtime":1608443108801,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rvbao6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/media/bsociety/Media/WD/time-to-leave/client/src/index.js",[],["29","30"],"/media/bsociety/Media/WD/time-to-leave/client/src/components/App.js",[],"/media/bsociety/Media/WD/time-to-leave/client/src/components/MyForm.js",[],"/media/bsociety/Media/WD/time-to-leave/client/src/components/Log.js",[],"/media/bsociety/Media/WD/time-to-leave/client/src/components/FormComp.js",["31"],"import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport emailjs from 'emailjs-com';\nimport timediff from 'timediff';\n\n\n// import {db} from './Firebase';\nimport './App.css';\n\nconst MyForm = ({template}) => {\n    let { register, handleSubmit } = useForm();\n    let {fields} = template;\n\n    const [msg, setMsg] = useState('');\n\n    const renderFields = (fields) => {\n        return fields.map(field => {\n            let { title, type, name, icon, placeholder } = field;\n            return (\n                <div className=\"labelField\" key={name}>\n                    <label htmlFor={name}>{title}<i className={icon}></i>: </label>\n                    <input type={type} name={name} id={name} placeholder={placeholder} ref={register} required/>\n                </div>\n            )\n        })\n    };\n\n    const onSubmit = async (values) => {\n\n        const { name, source, destination, time, email } = values;\n        const res =  await axios.get(`https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=${source}&destinations=${destination}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`);\n        const duration = res.data.rows[0].elements[0].duration.text;\n        let durationFinalArr = [0,0,0,0];\n        let durationArr = duration.split(' ');\n        durationArr.forEach((el, index) => {\n            if(el === 'day' || el === 'days'){\n                durationFinalArr[0] = Number(durationArr[index-1]);\n            }\n            if(el === 'hour' || el === 'hours'){\n                durationFinalArr[1] = Number(durationArr[index-1]);\n            }\n            if(el === 'min' || el === 'mins'){\n                durationFinalArr[2] = Number(durationArr[index-1]);\n            }\n            if(el === 'sec' || el === 'secs'){\n                durationFinalArr[3] = Number(durationArr[index-1]);\n            }\n        }); \n        let durF = Math.round(durationFinalArr[0]*60*24 + durationFinalArr[1]*60 + durationFinalArr[2] + durationFinalArr[3]*(1/60));\n        // let clickedTime = new Date().toTimeString().toString().slice(0,5);\n        let clickedTime = (new Date().toISOString()).slice(0,10) + ' ' + (new Date().toTimeString()).slice(0,8);\n        let t = time.split('T').join(' ') + ':00';\n        const fd = timediff(new Date(),time);\n\n        const fdInMin = Math.round(fd.hours*60 + fd.minutes + (fd.seconds/60)) ;\n\n        const x = fdInMin - durF;\n        if(x < 0) {\n            setMsg('You are delayed!');\n        } else if(x > 0) {\n            setMsg('You have ' + (x) + ' minutes left to start the journey'); \n        }\n        \n        const result = {\n            name: name,\n            source : source, \n            destination : destination, \n            t : t, \n            email : email, \n            clickedTime : clickedTime,\n            msg: msg\n        };\n\n        \n        console.log(result);\n        \n        \n        // await axios({\n        //     url: 'http://localhost:8080/api/data',\n        //     method: 'POST',\n        //     data: result\n        // })\n        // .then(() => {\n        //     console.log('DATA SENT TO SERVER');\n        //     window.location.reload();\n        //     // setMsg('');\n        // })\n        // .catch(()=>console.log('INTERNAL SERVER ERROR! : FROM REACT'));\n        \n        const data = await axios({\n                url: 'http://localhost:8080/',\n                method: 'GET'\n            });\n            console.log(data.data);\n        };\n        \n        return (\n            <div>\n            <form className=\"ui form\" id=\"timeForm\" onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"field\" key={Math.random}>\n                    {renderFields(fields)}\n                </div>\n                <div className=\"Button\">\n                    <button className=\"ui inverted primary button\" type=\"submit\">Remind Me</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\n\n\nexport default MyForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//!\n//!firebase code\n// db.ref('/info').push({ source, destination, time, email, clickedTime, durF}); \n        // emailjs.sendForm('mail_service', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID')\n        //     .then((result) => {\n        //         console.log(result.text);\n        //     }, (error) => {\n        //         console.log(error.text);\n        //     });\n\n\n\n\n\n\n\n        // source, destination, time, email, clickedTime\n        // var clickedTime = new Date('2020-12-20T16:53'),\n        //     time = new Date('2020-12-21T16:53'),\n        //     clickedTimeInSeconds = clickedTime.getTime() / 1000,\n        //     timeInSeconds = time.getTime() / 1000,\n        //     difference = Math.abs(clickedTimeInSeconds - timeInSeconds);\n\n        //     const timeArr = [0,0,0];\n\n        // if (difference < 60) {\n        //     timeArr[2] = difference;\n        // } else if (difference < 3600) {\n        //     timeArr[1] = Math.floor(difference / 60);\n        // } else {\n        //     timeArr[0] = Math.floor(difference / 3600);\n        // }\n\n        // console.log(timeArr);\n\n\n\n\n\n\n\n\n        // const ta = time.split(':').map((el) => Number(el));\n        // const cta = clickedTime.split(':').map((el) => Number(el));\n\n        // console.log(ta);\n        // console.log(cta);\n        // var resT = [0,0];\n        // let resT = [];\n\n        // if(cta[0] > ta[0]) {\n        //     console.log('delay');\n        // } \n        // else if (cta[0] < ta[0]) {\n        //     if(cta[1]<ta[1]) {\n        //         resT[0] = ta[0] - cta[0];\n        //         resT[1] = ta[1] - cta[1];\n        //     } else if(cta[1]>ta[1]) {\n        //         ta[0]--;\n        //         resT[1] = ta[1]+ 60 - cta[1];\n        //         resT[0] = ta[0] - cta[0];\n        //     }\n        // };\n\n        // const timeDiff = (resT[0] * 60 + resT[1]);\n//!\n\n\n\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         source: ``,\n    //         destination: ``,\n    //         time: ``,\n    //         email: ``\n    //     }\n    // }\n    // const [source, setSource] = useState(``);\n    // const [destination, setDestination] = useState(``);\n    // const [time, setTime] = useState(``);\n    // const [email, setEmail] = useState(``);\n\n    // const getResults = (event) => {\n    //     event.preventDefault();\n    //     let source = this.state.source;\n    //     let destination = this.state.destination;\n    //     let time = this.state.time;\n    //     let email = this.state.email;\n    //     console.log(source, destination, time, email);\n    //     this.setState({\n    //         source:``,\n    //         destination:``,\n    //         time:``,\n    //         email:``\n    //     });\n    // }\n\n    // const getSource = (event) => {\n    //     setSource(\"\");\n    //     setSource(event.target.value);\n    // }\n    \n    // const getDestination = (event) => {\n    //     setDestination(event.target.value);\n    // }\n    \n    // const getTime = (event) => {\n    //     setTime(event.target.value);\n    // }\n    \n    // const getEmail = (event) => {\n    //     setEmail(event.target.value);\n    // }\n\n\n    /* <div className=\"labelField\">\n        <label htmlFor=\"source\">Source <i className=\"flag icon\"></i>: </label>\n        <input ref={register} type=\"text\" name=\"source\" id=\"source\" placeholder=\"12.927880, 77.627600\" required/>\n    </div>\n    <div className=\"labelField\">\n        <label htmlFor=\"destination\">Destination <i className=\"flag checkered icon\"></i>: </label>\n        <input  type=\"text\" placeholder=\"13.035542, 77.597100\" required/>\n    </div>\n    <div className=\"labelField\">\n        <label htmlFor=\"time\">Time <i className=\"clock icon\"></i></label>\n        <input  type=\"time\" required></input>\n    </div>\n    <div className=\"labelField\">\n        <label htmlFor=\"email\">Email <i className=\"envelope open icon\"></i>:</label>\n        <input  type=\"email\" placeholder=\"john@email.com\" required/>\n    </div> */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // let duration = '2 days 3 hours 4 mins';\n    // let durationFinalArr = [0,0,0,0];\n    // let durationArr = duration.split(' ');\n    // durationArr.forEach((el, index) => {\n    //     if(el === 'day' || el === 'days'){\n    //         durationFinalArr[0] = durationArr[index-1];\n    //     }\n    //     if(el === 'hour' || el === 'hours'){\n    //         durationFinalArr[1] = durationArr[index-1];\n    //     }\n    //     if(el === 'min' || el === 'mins'){\n    //         durationFinalArr[2] = durationArr[index-1];\n    //     }\n    //     if(el === 'sec' || el === 'secs'){\n    //         durationFinalArr[3] = durationArr[index-1];\n    //     }\n    // }); \n    // console.log(durationFinalArr);","/media/bsociety/Media/WD/time-to-leave/client/src/components/Firebase.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":15},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'emailjs' is defined but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]